import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:semola/semola.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return ChangeNotifierProvider(
      create: (context) => MyAppState(),
      child: MaterialApp(
        title: 'App Divisione Sillabe',
        theme: ThemeData(
          primarySwatch: Colors.blue,
        ),
        home: MyHomePage(),
      ),
    );
  }
}

class MyAppState extends ChangeNotifier {
  var syllables = <String>[];

  void updateSyllables(String input) {
    syllables = Semola.hyphenate(input);
    notifyListeners();
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({Key? key}) : super(key: key);

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _formKey = GlobalKey<FormState>();
  final _controller = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Divisore Sillabe'),
      ),
      body: Padding(
        padding: EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              TextFormField(
                controller: _controller,
                decoration: InputDecoration(
                  hintText: 'Inserisci una Parola',
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Perfavore inserisci una Parola';
                  }
                  return null;
                },
              ),
              SizedBox(height: 16.0),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    if (_formKey.currentState!.validate()) {
                      final input = _controller.text.trim();
                      context.read<MyAppState>().updateSyllables(input);
                    }
                  },
                  child: Text('Dividila in Sillabe'),
                ),
              ),
              SizedBox(height: 16.0),
              Text(
                'Sillabe:',
                style: TextStyle(fontSize: 18.0, fontWeight: FontWeight.bold),
              ),
              SizedBox(height: 8.0),
              Expanded(
                child: Consumer<MyAppState>(
                  builder: (context, state, child) {
                    if (state.syllables.isEmpty) {
                      return Center(child: Text('Nessuna Sillaba da mostrare'));
                    }
                    return ListView.builder(
                      itemCount: state.syllables.length,
                      itemBuilder: (context, index) {
                        return ListTile(
                          title: Text(state.syllables[index]),
                        );
                      },
                    );
                  },
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }
}
